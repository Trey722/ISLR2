"0","library(ISLR2)"
"0","library(rpart)"
"0","library(rpart.plot)"
"0","library(caret)"
"0","library(randomForest)"
"0","library(dbarts)"
"0","set.seed(10)"
"0",""
"0","# Function gets train and test data index's"
"0","getTrainTestIndex <- function(amount) "
"0","  {"
"0","  total_numbers <- amount / 2"
"0",""
"0","  half <- amount/2"
"0","  "
"0","  all_indices <- sample(1:amount, size = amount, replace = FALSE)"
"0","  "
"0","  train_index <- all_indices[1:half]"
"0","  test_index <- all_indices[half:amount]"
"0","  "
"0","  return(list(train_index = train_index, test_index = test_index))"
"0","}"
"0",""
"0","getMSE <- function(actual, predictions) "
"0","{"
"0","  # This part throws an error"
"0","  if (length(actual) != length(predictions)) {"
"0","    stop(""Length of actual and predictions must be the same."")"
"0","  }"
"0","  "
"0","  mse <- mean((actual - predictions)^2)"
"0","  "
"0","  return(mse)"
"0","}"
"0",""
"0","# A. "
"0",""
"0","data <- Carseats"
"0","n <- nrow(data)"
"0",""
"0",""
"0","indexes <- getTrainTestIndex(n)"
"0",""
"0","traindata <- data[indexes$train_index, ]"
"0","testdata <- data[indexes$test_index, ]"
"0",""
"0",""
"0","# B.) "
"0",""
"0","m1 <- rpart(Sales ~ ., data <- traindata)"
"0",""
"0","rpart.plot(m1, roundint=FALSE)"
