"0",""
"0","### Model LOG"
"0","# Filter data for 1990 to 2008"
"0","Weekly1990_2008 <- Weekly[Weekly$Year >= 1990 & Weekly$Year <= 2008, ]"
"0",""
"0","# Filter data for 2009 to 2010"
"0","Weekly2009_2010 <- Weekly[Weekly$Year >= 2009 & Weekly$Year <= 2010, ]"
"0",""
"0","# Create logistic regression model"
"0","model_2 <- glm(Direction ~ Lag2, data = Weekly1990_2008, family = binomial)"
"0",""
"0","# Predict results of model 2"
"0","predicted_probs <- predict(model_2, newdata = Weekly2009_2010, type = ""response"")"
"0",""
"0","# Classify predictions based on threshold"
"0",""
"0","threshold_model_2 <- 0.5"
"0","predicted_direction <- ifelse(predicted_probs > threshold_model_2, ""Up"", ""Down"")"
"0",""
"0","# Create confusion matrix using the actual values from the Weekly2009_2010 dataset"
"0","confusion_matrix <- table(Actual = Weekly2009_2010$Direction, Predicted = predicted_direction)"
"0",""
"0","# Print the confusion matrix"
"0","confusion_matrix"
"1","      Predicted
"
"1","Actual"
"1"," Down"
"1"," Up"
"1","
  Down"
"1","    9"
"1"," 34"
"1","
  Up  "
"1","    5"
"1"," 56"
"1","
"
"0","### Model LDA"
"0",""
"0","# Load the MASS package"
"0","library(MASS)"
"2","
Attaching package: ‘MASS’

"
"2","The following object is masked from ‘package:ISLR2’:

    Boston

"
"0","# Create the LDA model"
"0","LDA_model <- lda(Direction ~ Lag2, data = Weekly1990_2008)"
"0",""
"0","# Make predictions (class labels)"
"0","predicted_probs <- predict(LDA_model, newdata = Weekly2009_2010)"
"0",""
"0","# Get predicted class labels"
"0","predicted_direction_LDA <- predicted_probs$class"
"0",""
"0","# Create the confusion matrix using the actual values from the Weekly2009_2010 dataset"
"0","confusion_matrix_LDA <- table(Actual = Weekly2009_2010$Direction, Predicted = predicted_direction_LDA)"
"0",""
"0","# Print the confusion matrix"
"0","confusion_matrix_LDA"
"1","      Predicted
"
"1","Actual"
"1"," Down"
"1"," Up"
"1","
  Down"
"1","    9"
"1"," 34"
"1","
  Up  "
"1","    5"
"1"," 56"
"1","
"
"0","### Model QDA"
"0",""
"0","# Create the QDA model"
"0","QDA_model <- qda(Direction ~ Lag2, data = Weekly1990_2008)"
"0",""
"0","# Make predictions (class labels)"
"0","predicted_probs <- predict(QDA_model, newdata = Weekly2009_2010)"
"0",""
"0","# Get predicted class labels"
"0","predicted_direction_QDA <- predicted_probs$class"
"0",""
"0","# Create the confusion matrix using the actual values from the Weekly2009_2010 dataset"
"0","confusion_matrix_QDA <- table(Actual = Weekly2009_2010$Direction, Predicted = predicted_direction_QDA)"
"0",""
"0","# Print the confusion matrix"
"0","confusion_matrix_QDA"
"1","      Predicted
"
"1","Actual"
"1"," Down"
"1"," Up"
"1","
  Down"
"1","    0"
"1"," 43"
"1","
  Up  "
"1","    0"
"1"," 61"
"1","
"
"0","### Model KNN with k = 1"
"0","# Load the class package"
"0","library(class)"
"0",""
"0","# Prepare the training and test data"
"0","train_data <- Weekly1990_2008"
"0","test_data <- Weekly2009_2010"
"0",""
"0","# Separate predictors and response for training"
"0","train_x <- as.matrix(train_data[, ""Lag2""])  # Convert to matrix"
"0","train_y <- train_data$Direction"
"0",""
"0","# Separate predictors for testing"
"0","test_x <- as.matrix(test_data[, ""Lag2""])  # Convert to matrix"
"0",""
"0","# Perform k-NN with k = 1"
"0","predicted_direction_KNN <- knn(train = train_x, test = test_x, cl = train_y, k = 1)"
"0",""
"0","# Create the confusion matrix"
"0","confusion_matrix_KNN <- table(Actual = test_data$Direction, Predicted = predicted_direction_KNN)"
"0",""
"0","# Print the confusion matrix"
"0","confusion_matrix_KNN"
"1","      Predicted
"
"1","Actual"
"1"," Down"
"1"," Up"
"1","
  Down"
"1","   21"
"1"," 22"
"1","
  Up  "
"1","   30"
"1"," 31"
"1","
"
"0","### Naive Bayes"
"0",""
"0","library(e1071)"
"0",""
"0","# Prepare the training and test data"
"0","train_data <- Weekly1990_2008"
"0","test_data <- Weekly2009_2010"
"0",""
"0","# Fit the Naive Bayes model"
"0","naive_bayes_model <- naiveBayes(Direction ~ Lag2, data = train_data)"
"0",""
"0","# Make predictions on the test data"
"0","predicted_direction_Bayes <- predict(naive_bayes_model, newdata = test_data)"
"0",""
"0","# Create the confusion matrix"
"0","confusion_matrix_Bayes <- table(Actual = test_data$Direction, Predicted = predicted_direction_Bayes)"
"0",""
"0","# Print the confusion matrix"
"0","confusion_matrix_Bayes"
"1","      Predicted
"
"1","Actual"
"1"," Down"
"1"," Up"
"1","
  Down"
"1","    0"
"1"," 43"
"1","
  Up  "
"1","    0"
"1"," 61"
"1","
"
